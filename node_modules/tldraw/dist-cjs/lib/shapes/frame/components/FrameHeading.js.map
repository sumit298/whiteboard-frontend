{
  "version": 3,
  "sources": ["../../../../../src/lib/shapes/frame/components/FrameHeading.tsx"],
  "sourcesContent": ["import { TLFrameShape, TLShapeId, useEditor, useIsEditing, useValue } from '@tldraw/editor'\nimport { memo, useEffect, useRef } from 'react'\nimport { getFrameHeadingSide, getFrameHeadingTranslation } from '../frameHelpers'\nimport { FrameLabelInput } from './FrameLabelInput'\n\nexport const FrameHeading = memo(function FrameHeading({\n\tid,\n\tname,\n\twidth,\n\theight,\n\tfill,\n\tstroke,\n\tcolor,\n\toffsetX,\n\tshowColors,\n}: {\n\tid: TLShapeId\n\tname: string\n\twidth: number\n\theight: number\n\tfill: string\n\tstroke: string\n\tcolor: string\n\toffsetX: number\n\tshowColors: boolean\n}) {\n\tconst editor = useEditor()\n\tconst { side, translation } = useValue(\n\t\t'shape rotation',\n\t\t() => {\n\t\t\tconst shape = editor.getShape<TLFrameShape>(id)\n\t\t\tif (!shape) {\n\t\t\t\t// meh\n\t\t\t\treturn {\n\t\t\t\t\tside: 0,\n\t\t\t\t\ttranslation: 'translate(0, 0)',\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst labelSide = getFrameHeadingSide(editor, shape)\n\t\t\treturn {\n\t\t\t\tside: labelSide,\n\t\t\t\ttranslation: getFrameHeadingTranslation(shape, labelSide, false),\n\t\t\t}\n\t\t},\n\t\t[editor, offsetX, id]\n\t)\n\n\tconst rInput = useRef<HTMLInputElement>(null)\n\tconst isEditing = useIsEditing(id)\n\n\tuseEffect(() => {\n\t\tconst el = rInput.current\n\t\tif (el && isEditing) {\n\t\t\t// On iOS, we must focus here\n\t\t\tel.focus()\n\t\t\tel.select()\n\t\t}\n\t}, [rInput, isEditing])\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"tl-frame-heading\"\n\t\t\tstyle={{\n\t\t\t\toverflow: isEditing ? 'visible' : 'hidden',\n\t\t\t\tmaxWidth: `calc(var(--tl-zoom) * ${\n\t\t\t\t\tside === 0 || side === 2 ? Math.ceil(width) : Math.ceil(height)\n\t\t\t\t}px + ${showColors ? '0px' : 'var(--frame-offset-width)'})`,\n\t\t\t\tbottom: '100%',\n\t\t\t\ttransform: `${translation} scale(var(--tl-scale)) translateX(${offsetX}px)`,\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"tl-frame-heading-hit-area\"\n\t\t\t\tstyle={{ color, backgroundColor: fill, boxShadow: `inset 0px 0px 0px 1px ${stroke}` }}\n\t\t\t>\n\t\t\t\t<FrameLabelInput ref={rInput} id={id} name={name} isEditing={isEditing} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA2EI;AA3EJ,oBAA2E;AAC3E,mBAAwC;AACxC,0BAAgE;AAChE,6BAAgC;AAEzB,MAAM,mBAAe,mBAAK,SAASA,cAAa;AAAA,EACtD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAUG;AACF,QAAM,aAAS,yBAAU;AACzB,QAAM,EAAE,MAAM,YAAY,QAAI;AAAA,IAC7B;AAAA,IACA,MAAM;AACL,YAAM,QAAQ,OAAO,SAAuB,EAAE;AAC9C,UAAI,CAAC,OAAO;AAEX,eAAO;AAAA,UACN,MAAM;AAAA,UACN,aAAa;AAAA,QACd;AAAA,MACD;AACA,YAAM,gBAAY,yCAAoB,QAAQ,KAAK;AACnD,aAAO;AAAA,QACN,MAAM;AAAA,QACN,iBAAa,gDAA2B,OAAO,WAAW,KAAK;AAAA,MAChE;AAAA,IACD;AAAA,IACA,CAAC,QAAQ,SAAS,EAAE;AAAA,EACrB;AAEA,QAAM,aAAS,qBAAyB,IAAI;AAC5C,QAAM,gBAAY,4BAAa,EAAE;AAEjC,8BAAU,MAAM;AACf,UAAM,KAAK,OAAO;AAClB,QAAI,MAAM,WAAW;AAEpB,SAAG,MAAM;AACT,SAAG,OAAO;AAAA,IACX;AAAA,EACD,GAAG,CAAC,QAAQ,SAAS,CAAC;AAEtB,SACC;AAAA,IAAC;AAAA;AAAA,MACA,WAAU;AAAA,MACV,OAAO;AAAA,QACN,UAAU,YAAY,YAAY;AAAA,QAClC,UAAU,yBACT,SAAS,KAAK,SAAS,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,MAAM,CAC/D,QAAQ,aAAa,QAAQ,2BAA2B;AAAA,QACxD,QAAQ;AAAA,QACR,WAAW,GAAG,WAAW,sCAAsC,OAAO;AAAA,MACvE;AAAA,MAEA;AAAA,QAAC;AAAA;AAAA,UACA,WAAU;AAAA,UACV,OAAO,EAAE,OAAO,iBAAiB,MAAM,WAAW,yBAAyB,MAAM,GAAG;AAAA,UAEpF,sDAAC,0CAAgB,KAAK,QAAQ,IAAQ,MAAY,WAAsB;AAAA;AAAA,MACzE;AAAA;AAAA,EACD;AAEF,CAAC;",
  "names": ["FrameHeading"]
}
