"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var textDirection_exports = {};
__export(textDirection_exports, {
  TextDirection: () => TextDirection
});
module.exports = __toCommonJS(textDirection_exports);
var import_core = require("@tiptap/core");
const TextDirection = import_core.Extension.create({
  name: "textDirection",
  addGlobalAttributes() {
    return [
      {
        types: ["heading", "paragraph"],
        attributes: {
          dir: {
            default: "auto",
            parseHTML: (element) => {
              const dirAttribute = element.getAttribute("dir");
              if (dirAttribute && ["ltr", "rtl", "auto"].includes(dirAttribute)) {
                return dirAttribute;
              } else {
                return "auto";
              }
            },
            renderHTML: (attributes) => {
              return { dir: attributes.dir };
            }
          }
        }
      }
    ];
  }
});
//# sourceMappingURL=textDirection.js.map
